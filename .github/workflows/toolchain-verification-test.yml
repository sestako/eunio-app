name: Toolchain Verification Test

# This workflow tests that the toolchain verification script correctly fails
# when versions are incorrect. It's designed to be run manually for testing purposes.

on:
  workflow_dispatch:
    inputs:
      test_scenario:
        description: 'Test scenario to run'
        required: true
        default: 'correct-versions'
        type: choice
        options:
        - correct-versions
        - simulate-wrong-kotlin
        - simulate-wrong-gradle

jobs:
  test-correct-versions:
    name: Test Correct Versions
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'correct-versions'
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Make scripts executable
      run: chmod +x ./gradlew ./scripts/verify-toolchain.sh
      
    - name: Run toolchain verification (should succeed)
      run: |
        echo "Testing with correct versions..."
        ./scripts/verify-toolchain.sh
        if [ $? -eq 0 ]; then
          echo "✅ Test passed: Verification succeeded as expected"
        else
          echo "❌ Test failed: Verification should have succeeded"
          exit 1
        fi

  test-wrong-kotlin:
    name: Test Wrong Kotlin Version Detection
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'simulate-wrong-kotlin'
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Make scripts executable
      run: chmod +x ./gradlew ./scripts/verify-toolchain.sh
      
    - name: Modify Kotlin version to simulate wrong version
      run: |
        echo "Simulating wrong Kotlin version..."
        sed -i 's/kotlin = "2.2.20"/kotlin = "1.9.21"/' gradle/libs.versions.toml
        grep 'kotlin = ' gradle/libs.versions.toml
        
    - name: Run toolchain verification (should fail)
      run: |
        echo "Testing with wrong Kotlin version..."
        ./scripts/verify-toolchain.sh
        EXIT_CODE=$?
        if [ $EXIT_CODE -ne 0 ]; then
          echo "✅ Test passed: Verification failed as expected (exit code: $EXIT_CODE)"
          exit 0
        else
          echo "❌ Test failed: Verification should have failed but succeeded"
          exit 1
        fi

  test-wrong-gradle:
    name: Test Wrong Gradle Version Detection
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'simulate-wrong-gradle'
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Make scripts executable
      run: chmod +x ./gradlew ./scripts/verify-toolchain.sh
      
    - name: Modify Gradle wrapper to use older version
      run: |
        echo "Simulating wrong Gradle version..."
        sed -i 's/gradle-8.10/gradle-8.5/' gradle/wrapper/gradle-wrapper.properties
        cat gradle/wrapper/gradle-wrapper.properties | grep distributionUrl
        
    - name: Run toolchain verification (should fail)
      run: |
        echo "Testing with wrong Gradle version..."
        ./scripts/verify-toolchain.sh
        EXIT_CODE=$?
        if [ $EXIT_CODE -ne 0 ]; then
          echo "✅ Test passed: Verification failed as expected (exit code: $EXIT_CODE)"
          exit 0
        else
          echo "❌ Test failed: Verification should have failed but succeeded"
          exit 1
        fi
