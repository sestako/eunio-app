rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User profiles - users can only read/write their own profile
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // User settings - users can only read/write their own settings
    match /user_settings/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Daily logs (new standardized path) - users can only read/write their own logs
    match /users/{userId}/dailyLogs/{logId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Daily logs (legacy path) - READ-ONLY during migration period
    // Users can read their own logs but writes are disabled to prevent data inconsistency
    match /daily_logs/{userId}/logs/{logId} {
      allow read: if isOwner(userId);
      allow write: if false; // Disabled - all writes should use new path: users/{userId}/dailyLogs/{logId}
    }
    
    // Health data - users can only read/write their own health data
    match /health_data/{userId}/entries/{entryId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Cycle tracking - users can only read/write their own cycle data
    match /cycle_tracking/{userId}/cycles/{cycleId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Temperature data - users can only read/write their own temperature data
    match /temperature_data/{userId}/readings/{readingId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Symptoms - users can only read/write their own symptoms
    match /symptoms/{userId}/entries/{entryId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Test connections (for Phase 3 testing) - allow authenticated users
    // TODO: Remove this in production or restrict further
    match /test_connections/{document=**} {
      allow read, write: if isAuthenticated();
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
